<!DOCTYPE html>
<html lang="en" data-ng-app="rsm-encode-remove">

<head>
    <meta charset="UTF-8">
    <title>Redstone Print and Mail</title>

    <link rel="stylesheet" href="./ui/vendor.css">
    <link rel="stylesheet" href="./ui/redstone.css">
</head>


<body data-ng-controller="EncodePresentCtrl">

<!-- The horizontal Navigation -->
<div data-ng-include="'ui/nav.horiz.html'"></div>

<div style="margin: auto; width: 80%;">

    <!--
    <h1 class="rsm-title-bar">
        <img src="https://redstonemail.com/companies/renderLogo/568ae6c2103fb4f64f2337d2" alt="logo" width="150px">
        Remove Encodes
    </h1>
    -->
    <br>

    <!-- isset($php_action) ? $php_action : '' -->
    <form data-ng-submit="sf_toggleLoad()" name="rsmDownload" enctype="multipart/form-data"
          action="/redstone/tools/<?= $php_action ?? '' ?>" method="POST">
        <input type="file" name="csv_file" data-flex="60" style="margin-right: 6px;">
        <br><br>
        <input type="submit">
    </form>

    <br>

    <img data-ng-show="s_showLoad" src="http://192.168.7.17/images/load.gif" alt="load">

    <ol>
        <li>files about 1,000 KB take less than 1min</li>
        <li>files about 2,000 KB take about 8min</li>
        <li>files about 3,000 KB take about 27min</li>
        <li>files about 4,000 KB take about 64min</li>
        <li><small>... So please split file so each file is about 1,000 KB, also the browsers tab will indicate if the
                server is working</small></li>
    </ol>
</div>

<div class="rsm-text-center">
    <h2>encodes that were removed</h2>
    <p class="rsm-encode-check">
        <small>When clean file downloads click:</small>
        <button data-ng-click="sf_getEncodeInfo()">See Encodes</button>
    </p>
    <p>&#131; &#181; &#215; &#223; = &#189; &#234;&#178;</p>

    <table class="flat-table flat-table-2">
        <thead>
        <tr>
            <th>encoded char</th>
            <th>Row#</th>
            <th>Column#</th>
            <th>Column 1 value</th>
        </tr>
        </thead>

        <tbody>
        <tr data-ng-repeat="rec in s_removedEncodes">
            <td><p data-ng-bind-html="rec.encode2"></p> ({{rec.encode}})</td>
            <td>{{rec.rsm_row}}</td>
            <td>{{rec.rsm_column}}</td>
            <td>{{rec.first_field}}</td>
        </tr>
        </tbody>
    </table>
</div>

<footer class="rsm-text-center rsm-mt">
    <h5>Redstone Automation v0.0.{{8-9+2}}</h5>
</footer>

<!-- 

    <script src="https://cdnjs.cloudflare.com/ajax/libs/angular.js/1.6.8/angular.min.js"
        integrity="sha256-drxfSiYW94qA5Cyx5wrs8T8qV5GB45vES84r+X4zNS0="
        crossorigin="anonymous"></script>
-->


<!-- vendor js
<script src="//cdnjs.cloudflare.com/ajax/libs/angular-material-icons/0.7.1/angular-material-icons.min.js"></script>
-->

<script src="./node_modules/modules.js"></script>

<script>
    // isset($ngid) ? $ngid : ''
    let AngularJS_id = "<?= $ngid ?? null ?>";
    window.onload = function () {
        // e.g. /redstone/tools/?angularjs-id=ng488641789g
        //document.rsmDownload.action = rsm_action();
        console.log('window loaded');
    };

    function rsm_action(form) {
        const bil = 9000000000;
        const rand = Math.floor((Math.random() * bil) + 1);
        const ng = "angularjsphpsqlcompsciwebapp";
        const rLetter = ng.charAt(Math.floor((Math.random() * ng.length) + 1));
        const ngid = `ng${rand}${rLetter}`;
        const phpAction = "/redstone/tools/?angularjs-id=" + ngid;
        console.log("phpAction = " + phpAction);
        form.action = phpAction;
        //return phpAction;
    }

    // _ANGULARJS APP
    let app = angular.module('rsm-encode-remove', [
        'ngAnimate', 'ngMaterial', 'ngMdIcons'
    ]);
    app.controller('EncodePresentCtrl', [
        '$scope', '$interval', '$http', '$timeout', '$sce',
        EncodePresentCtrlClass
    ]);

    // _CLASS CONTROLLER
    function EncodePresentCtrlClass($scope, $interval, $http, $timeout, $sce) {

        $scope.s_status = 'Controller is wired up';
        $scope.s_interval = 0;
        /*
            angularjs_id: "ng3321592l"
            created_at: "2019-07-23 19:43:48.630"
            encode2: "227"
            first_field: "11078"
            id: "4490"
            rsm_column: "1"
            rsm_file_name: "21127fd3076cfb87"
            rsm_row: "1"
        */
        $scope.s_removedEncodes = null;
        $scope.s_showLoad = false;
        let isLocal = (window.location.hostname.indexOf('localhost') > -1);
        let localUri = 'http://localhost/redstone/tools/get-removed-encodes/' + AngularJS_id;
        let proUri = 'http://192.168.7.17/redstone/tools/get-removed-encodes/' + AngularJS_id;
        let getRemovedEncodesUri = isLocal ? localUri : proUri;
        let makeRequest = true;

        // sf = scope function
        $scope.sf_getEncodeInfo = function ($event) {
            $scope.s_showLoad = false;

            //$event.preventDefault();
            $http.get(getRemovedEncodesUri)
                .then(function (res) {
                    let data = res.data;
                    console.log('The response from the redstone tools API = ', res);
                    if (data.length > 0) {
                        let htmlEncode;
                        let rec;
                        for (let i = 0; i < data.length; i++) {
                            rec = data[i];
                            htmlEncode = `<span>&#${rec.encode2};</span>`;
                            rec.encode = rec.encode2;
                            rec.encode2 = $sce.trustAsHtml(htmlEncode);
                        }
                    } else {
                        data = [];
                        data[0] = {
                            encode: 'empty',
                            rsm_column: 'empty',
                            rsm_row: 'empty',
                            first_field: 'empty'
                        };
                    }
                    $scope.s_removedEncodes = data;

                })
                .catch(function (err) {
                    console.log('__>> ERROR - not able to GET request: ' + getRemovedEncodesUri, err);
                }); // END OF: $http.get()

        };

        $scope.sf_toggleLoad = function () {
            $scope.s_showLoad = !$scope.s_showLoad;
        };

        $scope.sf_getEncodeInfoTimeout = function ($event) {
            //$event.preventDefault();
            console.log('AngularJS picked up click');
            console.log("The ngid from PHP = " + AngularJS_id);
            if (makeRequest) {
                $timeout(function () {
                    $http.get(getRemovedEncodesUri).then(function (res) {
                        let data = res.data;
                        console.log('The response from the redstone tools API = ', res);
                        if (data.length > 0) {
                            let htmlEncode;
                            let rec;
                            for (let i = 0; i < data.length; i++) {
                                rec = data[i];
                                htmlEncode = `<span>&#${rec.encode2};</span>`;
                                rec.encode = rec.encode2;
                                rec.encode2 = $sce.trustAsHtml(htmlEncode);
                            }
                        } else {
                            data = [];
                            data[0] = {
                                encode: 'empty',
                                rsm_column: 'empty',
                                rsm_row: 'empty',
                                first_field: 'empty'
                            };
                        }
                        $scope.s_removedEncodes = data;
                    }).catch(function (err) {
                        console.log('__>> ERROR - not able to GET request: ' + getRemovedEncodesUri, err);
                    }); // END OF: $http.get()
                }, 1500);
            }

        };
        /*
        // simple interval test to ensure app can maintain state
        $interval(function () {
            $scope.s_interval += 2.5;
        }, 500);
        */
    }
</script>

</body>
</html>